<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zxy.test.dao.DepartmentMapper">
	<!--public Department getDeptById(Integer id);  -->

	<select id="getDeptById" resultType="department">
		select id,dept_name departmentName from tbl_dept where id=#{id}
	</select>

<!--	public Department getDeptByIdPlus(Integer id);-->
	<!-- 
	public class Department {
			private Integer id;
			private String departmentName;
			private List<Employee> emps;
	  did  dept_name  ||  eid  last_name  email   gender  
	 -->

	<!--嵌套结果集的方式，使用collection标签定义关联的集合类型的属性封装规则  -->
	<resultMap id="mydept" type="com.zxy.test.pojo.Department">
		<!-- 
			collection定义关联集合类型的属性的封装规则 
			ofType:指定集合里面元素的类型
		-->
		<id column="did" property="id"></id>
		<result column="dept_name" property="departmentName"></result>
		<collection property="emps" ofType="com.zxy.test.pojo.Employee">
			<!-- 定义这个集合中元素的封装规则 -->
			<id property="id" column="eid"></id>
			<result column="last_name" property="lastName"></result>
			<result column="email" property="email"></result>
			<result column="gender" property="gender"></result>
		</collection>
	</resultMap>
	<!-- public Department getDeptByIdPlus(Integer id); -->
	<select id="getDeptByIdPlus" resultMap="mydept">
		SELECT d.id did,d.dept_name dept_name,e.id eid, e.last_name last_name,e.email email,e.gender gender
		FROM tbl_dept d LEFT JOIN tbl_employee e ON e.d_id=d.id WHERE d.id=#{id}
	</select>
	
	<!-- collection：分段查询 -->
	<resultMap type="department" id="MyDeptStep">
		<id column="id" property="id"/>
		<id column="dept_name" property="departmentName"/>
		<collection property="emps"
					select="com.zxy.test.dao.EmployeeMapperPlus.getEmpsByDeptId"
					column="{deptId=id}" fetchType="lazy"></collection>
	</resultMap>
	<!-- public Department getDeptByIdStep(Integer id); -->
	<select id="getDeptByIdStep" resultMap="MyDeptStep">
		select id,dept_name from tbl_dept where id=#{id}
	</select>

	<!-- 扩展：多列的值传递过去：
			将多列的值封装map传递；
			column="{key1=column1,key2=column2}"
		fetchType="lazy"：表示使用延迟加载；
				- lazy：延迟
				- eager：立即
	 -->
</mapper>